<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmbchina.baas.easyBaas.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.cmbchina.baas.easyBaas.model.User">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="node_address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_time" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="update_time" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_name, password, user_type, node_address, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.cmbchina.baas.easyBaas.model.User">
        insert into user (id, user_name, password,user_type,node_address,
        create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},#{userType,jdbcType=VARCHAR},
        #{nodeAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.cmbchina.baas.easyBaas.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="nodeAddress != null">
                node_address,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
            <if test="nodeAddress != null">
                #{nodeAddress,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cmbchina.baas.easyBaas.model.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=VARCHAR},
            </if>
            <if test="nodeAddress != null">
                node_address = #{nodeAddress,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cmbchina.baas.easyBaas.model.User">
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        user_type = #{userType,jdbcType=VARCHAR},
        node_address = #{nodeAddress,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByUserNameAndPassWord" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_name = #{userName,jdbcType=VARCHAR} and
        password = #{password,jdbcType=VARCHAR}
    </select>
    <select id="selectByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
            where user_name = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="selectByTypeAndAddress" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_type = #{userType,jdbcType=VARCHAR}
        and node_address = #{nodeAddress,jdbcType=VARCHAR}
    </select>
    <update id="updateByAddress" parameterType="com.cmbchina.baas.easyBaas.model.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
        </set>
        where node_address = #{nodeAddress,jdbcType=VARCHAR}
    </update>

</mapper>